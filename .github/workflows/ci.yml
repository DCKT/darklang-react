name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
    
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check formatting
        run: |
          yarn format
          if [ -n "$(git status --porcelain)" ]; then
            echo "There are differences:"
            git status --porcelain
            echo "----"
            echo ""
            echo 'Please run `yarn format` locally to fix the issues.'
            exit 1
          fi

      - name: Run tests
        run: yarn test

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
    
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build production assets
        run: yarn build


name: Deploy
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1.0.0
        with:
          fetch-depth: 1
      # Build, transpile etc.
      - name: Upload static assets to Dark canvas
        uses: gregbrimble/dark-static-assets-action@v1.0.0
        with:
          user: dck
          password: ${{ secrets.DARK_PASSWORD }}
          canvas: dck-react
          paths: build